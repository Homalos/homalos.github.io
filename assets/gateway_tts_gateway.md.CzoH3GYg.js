import{_ as r,C as n,c as p,o as d,j as a,G as t,ar as E,a as i,w as e}from"./chunks/framework.CXkkaYWf.js";const b=JSON.parse('{"title":"TTS网关","description":"","frontmatter":{},"headers":[],"relativePath":"gateway/tts_gateway.md","filePath":"gateway/tts_gateway.md","lastUpdated":1752832074000}'),o={name:"gateway/tts_gateway.md"};function g(F,s,y,c,u,C){const l=n("NolebasePageProperties"),h=n("VPNolebaseInlineLinkPreview"),k=n("NolebaseGitChangelog");return d(),p("div",null,[s[5]||(s[5]=a("h1",{id:"tts网关",tabindex:"-1"},[i("TTS网关 "),a("a",{class:"header-anchor",href:"#tts网关","aria-label":'Permalink to "TTS网关"'},"​")],-1)),t(l),s[6]||(s[6]=a("h2",{id:"目的和范围",tabindex:"-1"},[i("目的和范围 "),a("a",{class:"header-anchor",href:"#目的和范围","aria-label":'Permalink to "目的和范围"'},"​")],-1)),s[7]||(s[7]=a("p",null,"TTS 网关为 Homalos 量化交易系统提供了另一种交易接口集成方案。它通过 TTS（交易技术系统）交易平台实现市场数据接收和订单执行功能，作为 CTP 网关的替代方案。该网关由两个主要组件组成：市场数据处理和订单交易功能，均以 C++ 扩展实现，以实现高性能运行。",-1)),a("p",null,[s[2]||(s[2]=i("有关主要 CTP 网关集成的信息，请参阅")),t(h,{href:"https://deepwiki.com/Homalos/Homalos/3.1-ctp-gateway",target:"_blank",rel:"noreferrer"},{default:e(()=>s[0]||(s[0]=[i("CTP 网关")])),_:1,__:[0]}),s[3]||(s[3]=i("。有关核心网关架构和基类的详细信息，请参阅")),t(h,{href:"https://deepwiki.com/Homalos/Homalos/2.3-core-objects-and-service-registry",target:"_blank",rel:"noreferrer"},{default:e(()=>s[1]||(s[1]=[i("核心对象和服务注册表")])),_:1,__:[1]}),s[4]||(s[4]=i("。"))]),s[8]||(s[8]=E(`<h2 id="架构概述" tabindex="-1">架构概述 <a class="header-anchor" href="#架构概述" aria-label="Permalink to &quot;架构概述&quot;">​</a></h2><p>TTS 网关通过事件驱动架构集成到 Homalos 系统中，通过独立但协调的组件提供市场数据和交易功能。</p><h2 id="市场数据网关" tabindex="-1">市场数据网关 <a class="header-anchor" href="#市场数据网关" aria-label="Permalink to &quot;市场数据网关&quot;">​</a></h2><p>该<code>MarketDataGateway</code>课程通过TTS平台提供实时市场数据接收和处理能力。</p><h3 id="关键市场数据操作" tabindex="-1">关键市场数据操作 <a class="header-anchor" href="#关键市场数据操作" aria-label="Permalink to &quot;关键市场数据操作&quot;">​</a></h3><table tabindex="0"><thead><tr><th>操作</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>连接</td><td><code>connect(setting: dict)</code></td><td>建立与 TTS 市场数据服务器的连接</td></tr><tr><td>订阅</td><td><code>subscribe(req: SubscribeRequest)</code></td><td>订阅特定工具的市场数据</td></tr><tr><td>数据处理</td><td><code>onRtnDepthMarketData(data: dict)</code></td><td>处理传入的刻度数据并转换为<code>TickData</code>对象</td></tr><tr><td>错误处理</td><td><code>onRspError(error: dict)</code></td><td>处理 API 错误和连接问题</td></tr></tbody></table><h2 id="订单交易网关" tabindex="-1">订单交易网关 <a class="header-anchor" href="#订单交易网关" aria-label="Permalink to &quot;订单交易网关&quot;">​</a></h2><p>该类<code>OrderTradingGateway</code>通过TTS交易系统处理订单的下达、取消和仓位管理。</p><h3 id="交易业务" tabindex="-1">交易业务 <a class="header-anchor" href="#交易业务" aria-label="Permalink to &quot;交易业务&quot;">​</a></h3><table tabindex="0"><thead><tr><th>操作</th><th>方法</th><th>目的</th></tr></thead><tbody><tr><td>下单</td><td><code>send_order(req: OrderRequest)</code></td><td>向TTS系统提交新订单</td></tr><tr><td>取消订单</td><td><code>cancel_order(req: CancelRequest)</code></td><td>取消现有订单</td></tr><tr><td>持仓查询</td><td><code>query_position()</code></td><td>检索当前位置</td></tr><tr><td>账户查询</td><td><code>query_account()</code></td><td>检索帐户信息</td></tr><tr><td>合约查询</td><td><code>reqQryInstrument()</code></td><td>查询可用合约</td></tr></tbody></table><h2 id="配置和设置" tabindex="-1">配置和设置 <a class="header-anchor" href="#配置和设置" aria-label="Permalink to &quot;配置和设置&quot;">​</a></h2><h3 id="默认配置设置" tabindex="-1">默认配置设置 <a class="header-anchor" href="#默认配置设置" aria-label="Permalink to &quot;默认配置设置&quot;">​</a></h3><p>TTS 网关需要针对市场数据和交易连接的特定配置参数：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Market Data Gateway Settings</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">md_default_setting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;user_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;broker_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;md_address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;appid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;auth_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Trading Gateway Settings  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">td_default_setting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;userid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;broker_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;td_address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;md_address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;appid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;auth_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="支持的交易所" tabindex="-1">支持的交易所 <a class="header-anchor" href="#支持的交易所" aria-label="Permalink to &quot;支持的交易所&quot;">​</a></h3><p>TTS 网关通过映射支持以下交换<code>EXCHANGE_TTS2VT</code>：</p><table tabindex="0"><thead><tr><th>TTS Exchange ID</th><th>Homalos Exchange</th><th>描述</th></tr></thead><tbody><tr><td>CFFEX</td><td>Exchange.CFFEX</td><td>中国金融期货交易所</td></tr><tr><td>SHFE</td><td>Exchange.SHFE</td><td>上海期货交易所</td></tr><tr><td>DCE</td><td>Exchange.DCE</td><td>大连商品交易所</td></tr><tr><td>CZCE</td><td>Exchange.CZCE</td><td>郑州商品交易所</td></tr><tr><td>INE</td><td>Exchange.INE</td><td>上海国际能源交易中心</td></tr></tbody></table><h2 id="构建系统集成" tabindex="-1">构建系统集成 <a class="header-anchor" href="#构建系统集成" aria-label="Permalink to &quot;构建系统集成&quot;">​</a></h2><p>TTS 网关需要在使用前构建 C++ 扩展。构建系统通过 Meson 构建配置来管理这些扩展。</p><h2 id="错误处理和日志记录" tabindex="-1">错误处理和日志记录 <a class="header-anchor" href="#错误处理和日志记录" aria-label="Permalink to &quot;错误处理和日志记录&quot;">​</a></h2><p>两个 TTS 网关组件都实现了全面的错误处理和日志记录机制：</p><h3 id="错误处理模式" tabindex="-1">错误处理模式 <a class="header-anchor" href="#错误处理模式" aria-label="Permalink to &quot;错误处理模式&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Market Data Error Handling</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> write_error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, msg: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    error_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> error.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ErrorID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;N/A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    error_msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> error.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ErrorMsg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log_msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">，</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;代码&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error_id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">，</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;信息&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error_msg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.write_log(log_msg)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Trading Error Handling  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onRspOrderInsert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, data: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reqid: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, last: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Handle order insertion failures</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    order </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OrderData(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Status.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.gateway.on_order(order)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.gateway.write_error(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;交易委托失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error)</span></span></code></pre></div><h3 id="连接管理" tabindex="-1">连接管理 <a class="header-anchor" href="#连接管理" aria-label="Permalink to &quot;连接管理&quot;">​</a></h3><p>两个网关都实现了自动重连和状态监控：</p><ul><li><strong>连接状态跟踪</strong>：<code>connect_status</code>和<code>login_status</code>标志</li><li><strong>断开连接处理</strong>：<code>onFrontDisconnected()</code>带有原因代码的方法</li><li><strong>自动重新订阅</strong>：重新连接后重新订阅市场数据</li><li><strong>心跳监控</strong>：基于计时器的连接健康检查</li></ul>`,26)),t(k)])}const B=r(o,[["render",g]]);export{b as __pageData,B as default};
