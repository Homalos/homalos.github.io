import{_ as r,C as e,c as p,o as k,j as t,G as i,ar as o,a,w as n}from"./chunks/framework.CXkkaYWf.js";const C=JSON.parse('{"title":"CTP网关","description":"","frontmatter":{},"headers":[],"relativePath":"gateway/ctp_gateway.md","filePath":"gateway/ctp_gateway.md","lastUpdated":1752832074000}'),E={name:"gateway/ctp_gateway.md"};function c(g,s,y,u,b,F){const d=e("NolebasePageProperties"),h=e("VPNolebaseInlineLinkPreview"),l=e("NolebaseGitChangelog");return k(),p("div",null,[s[5]||(s[5]=t("h1",{id:"ctp网关",tabindex:"-1"},[a("CTP网关 "),t("a",{class:"header-anchor",href:"#ctp网关","aria-label":'Permalink to "CTP网关"'},"​")],-1)),i(d),s[6]||(s[6]=t("p",null,"本文档涵盖了 Homalos 交易系统中 CTP 网关的实现。CTP 网关提供与上海期货技术有限公司 CTP 交易平台的连接，支持接收市场数据并执行期货交易的订单。",-1)),t("p",null,[s[2]||(s[2]=a("有关 TTS 网关替代方案的信息，请参阅")),i(h,{href:"https://deepwiki.com/Homalos/Homalos/3.2-tts-gateway",target:"_blank",rel:"noreferrer"},{default:n(()=>s[0]||(s[0]=[a("TTS 网关")])),_:1,__:[0]}),s[3]||(s[3]=a("。有关整体网关架构和基类的详细信息，请参阅")),i(h,{href:"https://deepwiki.com/Homalos/Homalos/2.3-core-objects-and-service-registry",target:"_blank",rel:"noreferrer"},{default:n(()=>s[1]||(s[1]=[a("核心对象和服务注册表")])),_:1,__:[1]}),s[4]||(s[4]=a("。"))]),s[7]||(s[7]=o(`<h2 id="架构概述" tabindex="-1">架构概述 <a class="header-anchor" href="#架构概述" aria-label="Permalink to &quot;架构概述&quot;">​</a></h2><p>CTP 网关由两个主要组件组成，它们协同工作以提供完整的交易功能。</p><h2 id="市场数据网关" tabindex="-1">市场数据网关 <a class="header-anchor" href="#市场数据网关" aria-label="Permalink to &quot;市场数据网关&quot;">​</a></h2><p>该类<code>MarketDataGateway</code>负责处理从 CTP 服务器接收的实时市场数据。它通过事件系统管理订阅、连接状态和数据分发。</p><h2 id="订单交易网关" tabindex="-1">订单交易网关 <a class="header-anchor" href="#订单交易网关" aria-label="Permalink to &quot;订单交易网关&quot;">​</a></h2><p>该类<code>OrderTradingGateway</code>负责处理订单的下单、取消和交易执行报告。它管理从提交到最终状态更新的完整订单生命周期。</p><h3 id="订单处理管道" tabindex="-1">订单处理管道 <a class="header-anchor" href="#订单处理管道" aria-label="Permalink to &quot;订单处理管道&quot;">​</a></h3><p>交易网关通过结构化管道处理订单。</p><h2 id="连接管理" tabindex="-1">连接管理 <a class="header-anchor" href="#连接管理" aria-label="Permalink to &quot;连接管理&quot;">​</a></h2><p>两个网关都实现了复杂的连接管理，并具有自动重新连接功能。</p><h3 id="订阅队列管理" tabindex="-1">订阅队列管理 <a class="header-anchor" href="#订阅队列管理" aria-label="Permalink to &quot;订阅队列管理&quot;">​</a></h3><p>市场数据网关维护订阅队列，以处理在网关准备好之前订阅请求到达的情况：</p><table tabindex="0"><thead><tr><th>队列类型</th><th>目的</th><th>触发条件</th></tr></thead><tbody><tr><td><code>pending_subscriptions</code></td><td>等待 CTP 确认的符号</td><td>网关未登录</td></tr><tr><td><code>active_subscriptions</code></td><td>成功订阅符号</td><td>CTP onRspSubMarketData 成功</td></tr><tr><td><code>pending_subscription_queue</code></td><td>缓存的订阅请求</td><td>网关断开连接</td></tr></tbody></table><h2 id="事件系统集成" tabindex="-1">事件系统集成 <a class="header-anchor" href="#事件系统集成" aria-label="Permalink to &quot;事件系统集成&quot;">​</a></h2><p>CTP 网关与 Homalos 事件系统深度集成，既消费事件，也生产事件。</p><h3 id="活动制作" tabindex="-1">活动制作 <a class="header-anchor" href="#活动制作" aria-label="Permalink to &quot;活动制作&quot;">​</a></h3><p>网关发布各种事件来通知系统状态变化和数据更新：</p><table tabindex="0"><thead><tr><th>事件类型</th><th>来源</th><th>数据</th></tr></thead><tbody><tr><td><code>MARKET_TICK_RAW</code></td><td>市场数据网关</td><td><code>TickData</code>目的</td></tr><tr><td><code>GATEWAY_CONNECTED</code></td><td>两个网关</td><td>连接状态</td></tr><tr><td><code>GATEWAY_DISCONNECTED</code></td><td>两个网关</td><td>断线原因</td></tr><tr><td><code>GATEWAY_SUBSCRIPTION_SUCCESS</code></td><td>市场数据网关</td><td>符号认购成功</td></tr><tr><td><code>CONTRACT_UPDATED</code></td><td>订单交易网关</td><td>合同信息</td></tr></tbody></table><h2 id="配置和设置" tabindex="-1">配置和设置 <a class="header-anchor" href="#配置和设置" aria-label="Permalink to &quot;配置和设置&quot;">​</a></h2><p>CTP 网关需要特定的配置设置才能连接到 CTP 服务器：</p><h3 id="必填配置字段" tabindex="-1">必填配置字段 <a class="header-anchor" href="#必填配置字段" aria-label="Permalink to &quot;必填配置字段&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default_setting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;user_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CTP account username</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CTP account password  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;broker_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Broker identification code</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;md_address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Market data server address</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;td_address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Trading server address (OrderTradingGateway only)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;appid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Application ID (optional)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;auth_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Authentication code (optional)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="地址格式处理" tabindex="-1">地址格式处理 <a class="header-anchor" href="#地址格式处理" aria-label="Permalink to &quot;地址格式处理&quot;">​</a></h3><p>网关会自动将<code>tcp://</code>未指定协议的地址添加到前面：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _prepare_address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(address: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(address.startswith(scheme) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcp://&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ssl://&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;socks://&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tcp://&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address</span></span></code></pre></div><h2 id="构建系统集成" tabindex="-1">构建系统集成 <a class="header-anchor" href="#构建系统集成" aria-label="Permalink to &quot;构建系统集成&quot;">​</a></h2><p>CTP 网关依赖于使用 Meson 构建系统构建的已编译 C++ 扩展：</p><h3 id="扩展模块" tabindex="-1">扩展模块 <a class="header-anchor" href="#扩展模块" aria-label="Permalink to &quot;扩展模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块</th><th>目的</th><th>构建目标</th></tr></thead><tbody><tr><td><code>ctpmd.pyd</code></td><td>市场数据API绑定</td><td><code>ctpmd</code></td></tr><tr><td><code>ctptd.pyd</code></td><td>交易API绑定</td><td><code>ctptd</code></td></tr></tbody></table>`,29)),i(l)])}const P=r(E,[["render",c]]);export{C as __pageData,P as default};
